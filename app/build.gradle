/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

plugins {
    id "com.jetbrains.python.envs" version "0.0.26"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$project.rootDir/automation/gradle/versionCode.gradle"

android {
    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        applicationId "open.shadoweyer.shearray"
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode 1
        versionName Config.generateDebugVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release  {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            buildConfigField "boolean", "IS_RELEASED", "true"
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    splits {
        abi {
            enable true

            reset()

            include "arm64-v8a"
        }
    }
}

android.applicationVariants.all { variant ->
}

dependencies {
    implementation Deps.mozilla_concept_engine
    implementation Deps.mozilla_concept_menu
    implementation Deps.mozilla_concept_tabstray
    implementation Deps.mozilla_concept_toolbar
    implementation Deps.mozilla_concept_storage

    implementation Deps.mozilla_browser_engine_gecko_nightly
    implementation Deps.mozilla_browser_awesomebar
    implementation Deps.mozilla_browser_domains
    implementation Deps.mozilla_browser_search
    implementation Deps.mozilla_browser_tabstray
    implementation Deps.mozilla_browser_toolbar
    implementation Deps.mozilla_browser_menu
    implementation Deps.mozilla_browser_menu2
    implementation Deps.mozilla_browser_session
    implementation Deps.mozilla_browser_session_storage
    implementation Deps.mozilla_browser_state
    implementation Deps.mozilla_browser_icons
    implementation Deps.mozilla_browser_thumbnails
    implementation Deps.mozilla_browser_storage_sync

    implementation Deps.mozilla_feature_awesomebar
    implementation Deps.mozilla_feature_contextmenu
    implementation Deps.mozilla_feature_findinpage
    implementation Deps.mozilla_feature_media
    implementation Deps.mozilla_feature_sitepermissions
    implementation Deps.mozilla_feature_intent
    implementation Deps.mozilla_feature_search
    implementation Deps.mozilla_feature_session
    implementation Deps.mozilla_feature_toolbar
    implementation Deps.mozilla_feature_tabs
    implementation Deps.mozilla_feature_downloads
    implementation Deps.mozilla_feature_prompts
    implementation Deps.mozilla_feature_qr
    implementation Deps.mozilla_feature_readerview
    implementation Deps.mozilla_feature_webcompat
    implementation Deps.mozilla_feature_webnotifications

    implementation Deps.mozilla_ui_autocomplete
    implementation Deps.mozilla_ui_colors
    implementation Deps.mozilla_ui_icons
    implementation Deps.mozilla_ui_tabcounter

    implementation Deps.mozilla_support_images
    implementation Deps.mozilla_support_utils
    implementation Deps.mozilla_support_ktx
    implementation Deps.mozilla_support_rustlog
    implementation Deps.mozilla_support_rusthttp
    implementation Deps.mozilla_support_webextensions

    implementation Deps.kotlin_stdlib
    implementation Deps.kotlin_coroutines

    implementation Deps.androidx_appcompat
    implementation Deps.androidx_core_ktx
    implementation Deps.androidx_constraintlayout
    implementation Deps.androidx_preference_ktx
    implementation Deps.androidx_work_runtime_ktx
    implementation Deps.google_material
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    testImplementation 'junit:junit:4.12'
}

// -------------------------------------------------------------------------------------------------
// Task for printing APK information for the requested variant
// Usage: ./gradlew printVariants
// -------------------------------------------------------------------------------------------------
task printVariants {
    doLast {
        def variants = android.applicationVariants.collect { variant -> [
                apks: variant.outputs.collect { output -> [
                        abi: output.getFilter(com.android.build.VariantOutput.FilterType.ABI),
                        fileName: output.outputFile.name
                ]},
                build_type: variant.buildType.name,
                name: variant.name,
        ]}
        println 'variants: ' + groovy.json.JsonOutput.toJson(variants)
    }
}

task printGeckoviewVersion {
    doLast {
        def configuration = configurations.implementationDependenciesMetadata
        def dependencies = configuration.incoming.resolutionResult.allDependencies
        def geckoviewDependency = dependencies.find { it.selected.id.moduleIdentifier.group == 'org.mozilla.geckoview' }
        println('geckoviewVersion: ' + groovy.json.JsonOutput.toJson(geckoviewDependency.selected.moduleVersion.version))
    }
}
